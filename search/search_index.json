{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"THE SKINNY CODER \u00b6 Hello, people. This is Rahul SriRam , and welcome to my blog, TheSkinnyCoder . I'll be discussing and teaching you almost all of the Data Structures, Algorithms, in famous programming langauages like C++ and JAVA. C #include <stdio.h> int main () { printf ( \"Hello, World! \\n \" ); return 0 ; } C++ #include <iostream> int main () { std :: cout << \"Hello, World! \\n \" ; return 0 ; } JAVA class MainClass { public static void main ( String [] args ) { System . out . println ( \"Hello, World!\" ); } } Python if __name__ == '__main__' : print ( 'Hello, World!' ) JavaScript console . log ( 'Hello, World!\\n' ); Bash echo \"Hello, World\\n\" ;","title":"Home"},{"location":"#the-skinny-coder","text":"Hello, people. This is Rahul SriRam , and welcome to my blog, TheSkinnyCoder . I'll be discussing and teaching you almost all of the Data Structures, Algorithms, in famous programming langauages like C++ and JAVA. C #include <stdio.h> int main () { printf ( \"Hello, World! \\n \" ); return 0 ; } C++ #include <iostream> int main () { std :: cout << \"Hello, World! \\n \" ; return 0 ; } JAVA class MainClass { public static void main ( String [] args ) { System . out . println ( \"Hello, World!\" ); } } Python if __name__ == '__main__' : print ( 'Hello, World!' ) JavaScript console . log ( 'Hello, World!\\n' ); Bash echo \"Hello, World\\n\" ;","title":"THE SKINNY CODER"},{"location":"bs/bash1/","text":"","title":"Some basic bash"},{"location":"bs/bash2/","text":"","title":"Some pretty complex bash too"},{"location":"bs/editors/","text":"VSCode Series Part-1 : The Basic Setup \u00b6 Visual Studio Code is a code-editor built on ElectronJS, a JS framework, used to develop desktop applications. It is developed and maintained by Microsoft. Text Editors : Lack some essential features and need tardy jobs to be done by the programmer itself. IDEs : Heavy and a bit too much for small applications. Features of VSCode : Intellisense. Integrated Terminal. Extensions for extra support. Looks hot and geeky. Has got a wide-range of use-cases and supports many programming languages : perfect for web development. a better option for C/C++ development compared to CodeBlocks, NetBeans etc has got tremendous support for Python development (in built REPL, Jupyter Notebooks etc) Let's get started! \u00b6 1. Installation : \u00b6 Go to Visual Studio Code Official Site and download VSCode. Open the executable installer and install VSCode. Make sure that the Add to PATH is checked in. 2. Opening VSCode : \u00b6 Drag and drop the folder you want to open on the VSCode shortcut. Go to the folder in CLI and enter code . (Works only if VSCode is added to PATH . In VSCode, go to File > Open Folder and select the desired folder. 3. EditorConfig and Settings : \u00b6 .editorconfig file can be created in the root of the workspace. Use the EditorConfig for VS Code extension to generate it. There is a UI mode and a settings.json file too. Tip Zen-Mode and Centred Layout can be used it for a wider range of view and for no-disturbance mode. 4. The Command Palette and Edititing files : \u00b6 Basic intellisense is enabled for Web Development technology stacks. Use Visual Studio Intellicode , for better and extra intellisense. Press ctrl+space for auto-complete suggestions. 5. KeyBoard Shortcuts : \u00b6 Toggle the essentials : \u00b6 Toggle side-bar : ctrl+b Toggle Settings : ctrl+, Toggle integrated terminal : ctrl+oem3 Open a new terminal : ctrl+shift+oem3 Toggle Command Palette : ctrl+shift+p Comment and UnComment : ctrl+/ Cut, Copy and Pastes : \u00b6 Cut/Copy/Paste lines : ctrl+x , ctrl+c and ctrl+v respectively. Move lines up/down : alt+up and alt+down Create copies of lines up/down. alt+shift+up and alt+shift+down Navigations and Selections : \u00b6 Switch between the tabs : ctrl+tab Move by word : alt+right , alt+left Remove line : shift+ctrl+k Select/Deselect next match : ctrl+d and ctrl+u Others : \u00b6 Suggestions : ctrl+space Change Color Theme : ctrl+k, ctrl+t Multiple Cursors : alt+click Tip 1. Fake text (Lorem Ipsum) can be created using Emmet. 2. Keymaps from other Editors and IDEs can be used too. 6. UI Tweaks : \u00b6 Fonts and Cursor : \u00b6 Some fonts that are widely used in the programming community : Dank Mono Operator Mono Monaco Source Code Pro Ubuntu Mono Fira Code Menlo Tip Enable font-ligatures for an enhanced experience! // Font Settings : \"editor.fontFamily\" : \"Dank Mono\" , \"editor.fontLigatures\" : true , \"editor.fontSize\" : 19 , \"editor.fontWeight\" : \"500\" , \"editor.lineNumbers\" : \"on\" , \"zenMode.hideLineNumbers\" : false , // Cursor Settings : \"editor.cursorBlinking\" : \"smooth\" , \"editor.cursorStyle\" : \"underline\" , \"editor.cursorSurroundingLines\" : 0 , \"editor.cursorSmoothCaretAnimation\" : true , \"workbench.colorCustomizations\" : { \"terminalCursor.foreground\" : \"#ff0099\" , \"editorCursor.foreground\" : \"#ff0099\" } , Saving and Formatting : \u00b6 Auto-Save, Format and Wrap your code for a better look. // Comments, Brackets, Indentation and Quotes \"editor.tabSize\" : 2 , \"editor.autoIndent\" : \"advanced\" , \"editor.autoClosingBrackets\" : \"languageDefined\" , \"editor.autoClosingQuotes\" : \"languageDefined\" , \"editor.comments.insertSpace\" : true , // Bracket Pair Colorizer should be installed : \"bracketPairColorizer.showVerticalScopeLine\" : false , \"bracketPairColorizer.showHorizontalScopeLine\" : false , // Saving and Formatting \"editor.wordWrap\" : \"on\" , \"editor.formatOnType\" : true , \"editor.formatOnSave\" : true , \"editor.formatOnPaste\" : true , \"files.autoSave\" : \"afterDelay\" , Color and Icon Themes : \u00b6 Some of my favourite color schemes are : Night Owl Envy Predawn Theme Kit Oceanic Next Ayu Dark Meta Nord Dark \u2605\u2605\u2605\u2605\u2605 Some of my favourite icon themes are: Helium Icon Theme VSCode Great Icons Tip Enable semanting highlighting for enhanced experience. // Color and Icon Schemes : \"workbench.colorTheme\" : \"Night Owl\" , \"workbench.iconTheme\" : \"helium-icon-theme\" , \"editor.tokenColorCustomizations\" : { \"semanticHighlighting\" : true } , \"editor.semanticHighlighting.enabled\" : true , // Other UI tweaks : \"explorer.openEditors.visible\" : 0 , \"extensions.showRecommendationsOnlyOnDemand\" : true Tip Color Schemes can be modified too. But, I recommend not to! 7. The Integrated Terminal : \u00b6 On Windows, it is better to use Git Bash as the default command line. If you have aliases or a modified console, use shell arguments in the VSCode settings to use that shell. \"terminal.integrated.shell.windows\" : \"C:\\\\Program Files\\\\Git\\\\bin\\\\bash.exe\" , \"terminal.integrated.shellArgs.windows\" : [ \"--login\" , \"-i\" ] , \"terminal.integrated.fontFamily\" : \"Monaco\" , \"terminal.integrated.fontSize\" : 16 , \"terminal.integrated.fontWeight\" : \"400\" , \"terminal.integrated.cursorStyle\" : \"underline\" , \"terminal.integrated.cursorBlinking\" : true , \"terminal.integrated.letterSpacing\" : 2.5 , \"terminal.integrated.lineHeight\" : 1.2 , 8. Useful extensions : \u00b6 EditorConfig for VS Code Visual Studio Intellicode Bracket Pair Colorizer or Rainbow Indent Settings Sync SVG Viewer VSCode Faker Polacode GitLens and Git History 9. Version Control in VSCode : \u00b6 We can initialize a repositry, add files to the staging area, commit,pull, push etc. GitLens and Git History extensions can be used for more advanced Git usage.","title":"IDEs, Text Editors, and some history"},{"location":"bs/editors/#vscode-series-part-1-the-basic-setup","text":"Visual Studio Code is a code-editor built on ElectronJS, a JS framework, used to develop desktop applications. It is developed and maintained by Microsoft. Text Editors : Lack some essential features and need tardy jobs to be done by the programmer itself. IDEs : Heavy and a bit too much for small applications. Features of VSCode : Intellisense. Integrated Terminal. Extensions for extra support. Looks hot and geeky. Has got a wide-range of use-cases and supports many programming languages : perfect for web development. a better option for C/C++ development compared to CodeBlocks, NetBeans etc has got tremendous support for Python development (in built REPL, Jupyter Notebooks etc)","title":"VSCode Series Part-1 : The Basic Setup"},{"location":"bs/editors/#lets-get-started","text":"","title":"Let's get started!"},{"location":"bs/editors/#1-installation","text":"Go to Visual Studio Code Official Site and download VSCode. Open the executable installer and install VSCode. Make sure that the Add to PATH is checked in.","title":"1. Installation :"},{"location":"bs/editors/#2-opening-vscode","text":"Drag and drop the folder you want to open on the VSCode shortcut. Go to the folder in CLI and enter code . (Works only if VSCode is added to PATH . In VSCode, go to File > Open Folder and select the desired folder.","title":"2. Opening VSCode :"},{"location":"bs/editors/#3-editorconfig-and-settings","text":".editorconfig file can be created in the root of the workspace. Use the EditorConfig for VS Code extension to generate it. There is a UI mode and a settings.json file too. Tip Zen-Mode and Centred Layout can be used it for a wider range of view and for no-disturbance mode.","title":"3. EditorConfig and Settings :"},{"location":"bs/editors/#4-the-command-palette-and-edititing-files","text":"Basic intellisense is enabled for Web Development technology stacks. Use Visual Studio Intellicode , for better and extra intellisense. Press ctrl+space for auto-complete suggestions.","title":"4. The Command Palette and Edititing files :"},{"location":"bs/editors/#5-keyboard-shortcuts","text":"","title":"5. KeyBoard Shortcuts :"},{"location":"bs/editors/#toggle-the-essentials","text":"Toggle side-bar : ctrl+b Toggle Settings : ctrl+, Toggle integrated terminal : ctrl+oem3 Open a new terminal : ctrl+shift+oem3 Toggle Command Palette : ctrl+shift+p Comment and UnComment : ctrl+/","title":"Toggle the essentials :"},{"location":"bs/editors/#cut-copy-and-pastes","text":"Cut/Copy/Paste lines : ctrl+x , ctrl+c and ctrl+v respectively. Move lines up/down : alt+up and alt+down Create copies of lines up/down. alt+shift+up and alt+shift+down","title":"Cut, Copy and Pastes :"},{"location":"bs/editors/#navigations-and-selections","text":"Switch between the tabs : ctrl+tab Move by word : alt+right , alt+left Remove line : shift+ctrl+k Select/Deselect next match : ctrl+d and ctrl+u","title":"Navigations and Selections :"},{"location":"bs/editors/#others","text":"Suggestions : ctrl+space Change Color Theme : ctrl+k, ctrl+t Multiple Cursors : alt+click Tip 1. Fake text (Lorem Ipsum) can be created using Emmet. 2. Keymaps from other Editors and IDEs can be used too.","title":"Others :"},{"location":"bs/editors/#6-ui-tweaks","text":"","title":"6. UI Tweaks :"},{"location":"bs/editors/#fonts-and-cursor","text":"Some fonts that are widely used in the programming community : Dank Mono Operator Mono Monaco Source Code Pro Ubuntu Mono Fira Code Menlo Tip Enable font-ligatures for an enhanced experience! // Font Settings : \"editor.fontFamily\" : \"Dank Mono\" , \"editor.fontLigatures\" : true , \"editor.fontSize\" : 19 , \"editor.fontWeight\" : \"500\" , \"editor.lineNumbers\" : \"on\" , \"zenMode.hideLineNumbers\" : false , // Cursor Settings : \"editor.cursorBlinking\" : \"smooth\" , \"editor.cursorStyle\" : \"underline\" , \"editor.cursorSurroundingLines\" : 0 , \"editor.cursorSmoothCaretAnimation\" : true , \"workbench.colorCustomizations\" : { \"terminalCursor.foreground\" : \"#ff0099\" , \"editorCursor.foreground\" : \"#ff0099\" } ,","title":"Fonts and Cursor :"},{"location":"bs/editors/#saving-and-formatting","text":"Auto-Save, Format and Wrap your code for a better look. // Comments, Brackets, Indentation and Quotes \"editor.tabSize\" : 2 , \"editor.autoIndent\" : \"advanced\" , \"editor.autoClosingBrackets\" : \"languageDefined\" , \"editor.autoClosingQuotes\" : \"languageDefined\" , \"editor.comments.insertSpace\" : true , // Bracket Pair Colorizer should be installed : \"bracketPairColorizer.showVerticalScopeLine\" : false , \"bracketPairColorizer.showHorizontalScopeLine\" : false , // Saving and Formatting \"editor.wordWrap\" : \"on\" , \"editor.formatOnType\" : true , \"editor.formatOnSave\" : true , \"editor.formatOnPaste\" : true , \"files.autoSave\" : \"afterDelay\" ,","title":"Saving and Formatting :"},{"location":"bs/editors/#color-and-icon-themes","text":"Some of my favourite color schemes are : Night Owl Envy Predawn Theme Kit Oceanic Next Ayu Dark Meta Nord Dark \u2605\u2605\u2605\u2605\u2605 Some of my favourite icon themes are: Helium Icon Theme VSCode Great Icons Tip Enable semanting highlighting for enhanced experience. // Color and Icon Schemes : \"workbench.colorTheme\" : \"Night Owl\" , \"workbench.iconTheme\" : \"helium-icon-theme\" , \"editor.tokenColorCustomizations\" : { \"semanticHighlighting\" : true } , \"editor.semanticHighlighting.enabled\" : true , // Other UI tweaks : \"explorer.openEditors.visible\" : 0 , \"extensions.showRecommendationsOnlyOnDemand\" : true Tip Color Schemes can be modified too. But, I recommend not to!","title":"Color and Icon Themes :"},{"location":"bs/editors/#7-the-integrated-terminal","text":"On Windows, it is better to use Git Bash as the default command line. If you have aliases or a modified console, use shell arguments in the VSCode settings to use that shell. \"terminal.integrated.shell.windows\" : \"C:\\\\Program Files\\\\Git\\\\bin\\\\bash.exe\" , \"terminal.integrated.shellArgs.windows\" : [ \"--login\" , \"-i\" ] , \"terminal.integrated.fontFamily\" : \"Monaco\" , \"terminal.integrated.fontSize\" : 16 , \"terminal.integrated.fontWeight\" : \"400\" , \"terminal.integrated.cursorStyle\" : \"underline\" , \"terminal.integrated.cursorBlinking\" : true , \"terminal.integrated.letterSpacing\" : 2.5 , \"terminal.integrated.lineHeight\" : 1.2 ,","title":"7. The Integrated Terminal :"},{"location":"bs/editors/#8-useful-extensions","text":"EditorConfig for VS Code Visual Studio Intellicode Bracket Pair Colorizer or Rainbow Indent Settings Sync SVG Viewer VSCode Faker Polacode GitLens and Git History","title":"8. Useful extensions :"},{"location":"bs/editors/#9-version-control-in-vscode","text":"We can initialize a repositry, add files to the staging area, commit,pull, push etc. GitLens and Git History extensions can be used for more advanced Git usage.","title":"9. Version Control in VSCode :"},{"location":"bs/envsetup/","text":"","title":"WorkSpaces and Environment Setups"},{"location":"bs/git/","text":"","title":"Shut Up and Learn Git"},{"location":"bs/gooddev/","text":"","title":"How to be good developers"},{"location":"cpp/buzzwords/","text":"","title":"OOPS extras - friend, virtual, override keywords"},{"location":"cpp/gcc/","text":"","title":"Welcome to g++ and its flags"},{"location":"cpp/gdb/","text":"","title":"gdb, the saviour"},{"location":"cpp/lists/","text":"","title":"The big battle - Inintializer Lists VS Constructors"},{"location":"cpp/make/","text":"","title":"Makefiles and CMake"},{"location":"cpp/memory/","text":"","title":"Know the internals - Stack VS Heap Memory"},{"location":"cpp/oops/","text":"","title":"OOPS Concepts"},{"location":"cpp/overload/","text":"","title":"Function and Operator OverLoading"},{"location":"cpp/overview/","text":"","title":"Series OverView"},{"location":"cpp/smart/","text":"","title":"Effecient Memory - Smart Pointers"},{"location":"cpp/stl/","text":"","title":"STL Series"},{"location":"cpp/templ/","text":"","title":"Function and Class Templates"},{"location":"cpp/valgrind/","text":"","title":"What the f*** is valgrind btw"},{"location":"ds/linear/array/","text":"","title":"Arrays"},{"location":"ds/linear/cdll/","text":"","title":"Using DLLs"},{"location":"ds/linear/cqueue/","text":"","title":"STL and Collections implementations"},{"location":"ds/linear/cqueuearr/","text":"","title":"Using Arrays"},{"location":"ds/linear/cqueuell/","text":"","title":"Using Linked Lists"},{"location":"ds/linear/csll/","text":"","title":"Using SLLs"},{"location":"ds/linear/deque/","text":"","title":"STL and Collections implementations"},{"location":"ds/linear/dequearr/","text":"","title":"Using Arrays"},{"location":"ds/linear/dequell/","text":"","title":"Using Linked Lists"},{"location":"ds/linear/dll/","text":"","title":"Doubly Linked Lists"},{"location":"ds/linear/hash/","text":"","title":"STL and Collections implementations"},{"location":"ds/linear/ll/","text":"","title":"STL and Collections implementations"},{"location":"ds/linear/queue/","text":"","title":"STL and Collections implementations"},{"location":"ds/linear/queueappl/","text":"","title":"Applications"},{"location":"ds/linear/queuearr/","text":"","title":"Using Arrays"},{"location":"ds/linear/queuell/","text":"","title":"Using Linked Lists"},{"location":"ds/linear/sll/","text":"","title":"Singly Linked Lists"},{"location":"ds/linear/stack/","text":"","title":"STL and Collections implementations"},{"location":"ds/linear/stackappl/","text":"","title":"Applications"},{"location":"ds/linear/stackarr/","text":"","title":"Using Arrays"},{"location":"ds/linear/stackll/","text":"","title":"Using Linked Lists"},{"location":"ds/linear/string/","text":"","title":"Strings"},{"location":"ds/nonlinear/adjlist/","text":"","title":"Adjacency Lists"},{"location":"ds/nonlinear/adjmatr/","text":"","title":"Adjacency Matrices"},{"location":"ds/nonlinear/avl/","text":"","title":"AVL Trees"},{"location":"ds/nonlinear/bbpt/","text":"","title":"B and B+ Trees"},{"location":"ds/nonlinear/binheap/","text":"","title":"Binomial Heaps"},{"location":"ds/nonlinear/bst/","text":"","title":"Binary Search Trees"},{"location":"ds/nonlinear/bt/","text":"","title":"Binary Trees"},{"location":"ds/nonlinear/disjsets/","text":"","title":"Disjoint Sets"},{"location":"ds/nonlinear/edgelist/","text":"","title":"Edge Lists"},{"location":"ds/nonlinear/fibheap/","text":"","title":"Fibonacci Heaps"},{"location":"ds/nonlinear/left1/","text":"","title":"Height-Based"},{"location":"ds/nonlinear/left2/","text":"","title":"Weight-Based"},{"location":"ds/nonlinear/maxheap/","text":"","title":"MaxHeaps"},{"location":"ds/nonlinear/minheap/","text":"","title":"MinHeaps"},{"location":"ds/nonlinear/pairheap/","text":"","title":"Pairing Heaps"},{"location":"ds/nonlinear/rbt/","text":"","title":"Red-Black Trees"},{"location":"ds/nonlinear/rq/","text":"","title":"Segment Trees and Range Queuries"},{"location":"ds/nonlinear/st/","text":"","title":"Splay Trees"},{"location":"java/collections/","text":"","title":"Explore the Generics and Collections in JAVA"},{"location":"java/oops/","text":"","title":"OOPS Concepts"},{"location":"java/overview/","text":"","title":"Series OverView"},{"location":"java/threads/","text":"","title":"Async Java - Threading"},{"location":"js/arrow/","text":"","title":"Arrow functions"},{"location":"js/async/","text":"","title":"Aysnchronous JS"},{"location":"js/destructure/","text":"","title":"Array and Object DeStructuring"},{"location":"js/extras/","text":"","title":"Extras"},{"location":"js/fnctns/","text":"","title":"Functions Unlimited - JS"},{"location":"js/keywords/","text":"","title":"var, let, const keywords"},{"location":"js/modules/","text":"","title":"Modules in JS"},{"location":"js/obj/","text":"","title":"Object Literal Enhancements"},{"location":"js/oops/","text":"","title":"OOPS Concepts"},{"location":"js/overview/","text":"","title":"Series OverView"},{"location":"js/spread/","text":"","title":"Rest and Spread Operators"},{"location":"js/templates/","text":"","title":"Template Literals"},{"location":"py/async/","text":"","title":"Async Python - Threading and MultiProcessing"},{"location":"py/contman/","text":"","title":"To hell with the Context Managers"},{"location":"py/envmanagers/","text":"","title":"Virtual Environemnts and Package Managers"},{"location":"py/extras/","text":"","title":"Extras"},{"location":"py/fnctns/","text":"","title":"Functions Unlimited - Python"},{"location":"py/ip/","text":"","title":"InPut in Pyton and higher-order functions"},{"location":"py/listcomp/","text":"","title":"Beautify Python - List Comprehensions"},{"location":"py/oops/","text":"","title":"OOPS Concepts"},{"location":"py/op/","text":"","title":"OutPut in Python and String Formatting"},{"location":"py/overview/","text":"","title":"Series OverView"},{"location":"py/packages/","text":"","title":"Modulated Code - Packages and Imports"}]}